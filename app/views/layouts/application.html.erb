<!DOCTYPE html>
<html>
  <head>
    <title>TuneBox - ライブ情報検索サイト</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <!-- Bootstrap CSS CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome Icons CDN -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    
    <!-- Bootstrap JavaScript CDN -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    

    <style>
      body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        margin: 0; /* 🆕 bodyのマージンをリセット */
        padding: 0; /* 🆕 bodyのパディングをリセット */
      }

      .navbar-brand {
        font-weight: 700;
        font-size: 1.8rem;
      }

      .navbar {
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        backdrop-filter: blur(10px);
        background: rgba(255, 255, 255, 0.95) !important;
      }

      .main-content {
        min-height: calc(100vh - 200px);
        background: white;
        border-radius: 20px 20px 0 0;
        margin-top: 20px;
        box-shadow: 0 -5px 30px rgba(0,0,0,0.1);
      }

      /* 🆕 フッター全幅修正 */
      .footer {
        background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
        color: white;
        margin-top: auto;
        width: 100vw; /* 🆕 ビューポート全幅 */
        position: relative;
        left: 50%;
        right: 50%;
        margin-left: -50vw;
        margin-right: -50vw;
      }

      .btn-gradient {
        background: linear-gradient(45deg, #667eea, #764ba2);
        border: none;
        color: white;
        transition: all 0.3s ease;
      }

      .btn-gradient:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        color: white;
      }

      .notification-badge {
        position: relative;
        top: -2px;
        right: 5px;
        background: #e74c3c;
        color: white;
        border-radius: 50%;
        padding: 2px 6px;
        font-size: 0.7rem;
        animation: pulse 2s infinite;
      }

      @keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.1); }
        100% { transform: scale(1); }
      }

      .social-icon {
        width: 40px;
        height: 40px;
        background: rgba(255,255,255,0.1);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
        text-decoration: none;
        color: white;
      }

      .social-icon:hover {
        background: rgba(255,255,255,0.2);
        transform: translateY(-3px);
        color: white;
      }

      .hover-card {
        transition: all 0.3s ease;
      }

      .hover-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 30px rgba(0,0,0,0.15) !important;
      }

      /* 🆕 フッター内のテキスト色修正 */
      .footer h5,
      .footer h6 {
        color: white;
        font-weight: 600;
      }

      .footer .text-muted {
        color: rgba(255, 255, 255, 0.8) !important;
      }

      .footer a.text-muted:hover {
        color: rgba(255, 255, 255, 1) !important;
        text-decoration: underline !important;
      }
    </style>
  </head>

  <body>
    <!-- ナビゲーションヘッダー -->
    <nav class="navbar navbar-expand-lg navbar-light fixed-top">
      <div class="container">
        <%= link_to root_path, class: "navbar-brand text-primary" do %>
          <i class="fas fa-music me-2"></i>TuneBox
        <% end %>

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
          <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav me-auto">
            <li class="nav-item">
              <%= link_to favorite_albums_path, class: "nav-link #{'active' if current_page?(favorite_albums_path)}" do %>
                <i class="fas fa-compact-disc me-1"></i>名盤リストを作る
              <% end %>
            </li>
          </ul>

          <ul class="navbar-nav">
            <% if defined?(current_user) && current_user %>
              <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown">
                  <i class="fas fa-user-circle me-2"></i>
                  <%= current_user.name %>
                </a>
                <ul class="dropdown-menu">
                  <li><%= link_to "マイページ", user_path(current_user), class: "dropdown-item" %></li>
                  <li><%= link_to "プロフィール編集", edit_user_path(current_user), class: "dropdown-item" %></li>
                  <li><hr class="dropdown-divider"></li>
                  <li><%= link_to "ログアウト", logout_path, class: "dropdown-item text-danger", id: "logout-link" %></li>
                </ul>
              </li>
            <% else %>
              <li class="nav-item me-2">
                <%= link_to "ログイン", login_path, class: "btn btn-outline-primary", id: "login-link" %>
              </li>
              <li class="nav-item">
                <%= link_to "新規登録", signup_path, class: "btn btn-gradient", id: "signup-link" %>
              </li>
            <% end %>
          </ul>
        </div>
      </div>
    </nav>

    <!-- メインコンテンツ -->
    <div class="container-fluid" style="padding-top: 80px;">
      <div class="container">
        <div class="main-content p-4">
          <!-- フラッシュメッセージ -->
          <% flash.each do |type, message| %>
            <div class="alert alert-<%= type == 'notice' ? 'success' : 'danger' %> alert-dismissible fade show" role="alert">
              <i class="fas fa-<%= type == 'notice' ? 'check-circle' : 'exclamation-triangle' %> me-2"></i>
              <%= message %>
              <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
          <% end %>

          <%= yield %>
        </div>
      </div>
    </div>

    <!-- 🆕 フッター修正版 -->
    <footer class="footer mt-5">
      <div class="container py-5">
        <div class="row">
          <div class="col-lg-4 mb-4">
            <h5 class="mb-3">
              <i class="fas fa-music me-2"></i>TuneBox
            </h5>
            <p class="text-muted">
              日本全国のライブ・コンサート情報を簡単に検索できるプラットフォーム。
              音楽好きのための、音楽好きによるサービスです。
            </p>
            <div class="d-flex gap-3">
              <a href="#" class="social-icon">
                <i class="fab fa-twitter"></i>
              </a>
              <a href="#" class="social-icon">
                <i class="fab fa-instagram"></i>
              </a>
              <a href="#" class="social-icon">
                <i class="fab fa-facebook"></i>
              </a>
              <a href="#" class="social-icon">
                <i class="fab fa-youtube"></i>
              </a>
            </div>
          </div>

          <div class="col-lg-2 col-md-6 mb-4">
            <h6 class="mb-3">サービス</h6>
            <ul class="list-unstyled">
              <li class="mb-2"><a href="#" class="text-muted text-decoration-none">ライブ検索</a></li>
              <li class="mb-2"><a href="#" class="text-muted text-decoration-none">会場情報</a></li>
              <li class="mb-2"><a href="#" class="text-muted text-decoration-none">アーティスト</a></li>
              <li class="mb-2"><a href="#" class="text-muted text-decoration-none">チケット</a></li>
            </ul>
          </div>

          <div class="col-lg-2 col-md-6 mb-4">
            <h6 class="mb-3">サポート</h6>
            <ul class="list-unstyled">
              <li class="mb-2"><a href="#" class="text-muted text-decoration-none">よくある質問</a></li>
              <li class="mb-2"><a href="#" class="text-muted text-decoration-none">お問い合わせ</a></li>
              <li class="mb-2"><a href="#" class="text-muted text-decoration-none">利用規約</a></li>
              <li class="mb-2"><a href="#" class="text-muted text-decoration-none">プライバシー</a></li>
            </ul>
          </div>

          <div class="col-lg-4 mb-4">
            <h6 class="mb-3">ニュースレター</h6>
            <p class="text-muted mb-3">
              最新のライブ情報や特別なお知らせを受け取りませんか？
            </p>
            <div class="input-group">
              <input type="email" class="form-control" placeholder="メールアドレス">
              <button class="btn btn-gradient" type="button">
                <i class="fas fa-paper-plane"></i>
              </button>
            </div>
          </div>
        </div>

        <hr class="my-4" style="border-color: rgba(255,255,255,0.1);">

        <div class="row align-items-center">
          <div class="col-md-6">
            <p class="text-muted mb-0">
              &copy; 2025 TuneBox. All rights reserved.
            </p>
          </div>
        </div>
      </div>
    </footer>

    <!-- Bootstrap JavaScript CDN -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
      // スムーススクロール
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
          e.preventDefault();
          const href = this.getAttribute('href');
          if (href && href !== '#') {
            const target = document.querySelector(href);
            if (target) {
              target.scrollIntoView({ behavior: 'smooth' });
            }
          }
        });
      });

      // アラートの自動消去
      setTimeout(() => {
        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(alert => {
          if (window.bootstrap && window.bootstrap.Alert) {
            const bsAlert = new bootstrap.Alert(alert);
            bsAlert.close();
          }
        });
      }, 5000);

      // お気に入り機能のJavaScript
      document.addEventListener('DOMContentLoaded', function() {
        // Bootstrapドロップダウンの初期化
        var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'));
        var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
          return new bootstrap.Dropdown(dropdownToggleEl);
        });
        // ログイン・ログアウト・新規登録リンクのクリック処理
        document.addEventListener('click', function(e) {
          // ログインリンクのクリック
          if (e.target.closest('#login-link')) {
            console.log('Login link clicked'); // デバッグ用
          }
          
          // 新規登録リンクのクリック
          if (e.target.closest('#signup-link')) {
            console.log('Signup link clicked'); // デバッグ用
          }
          
                    // ログアウトリンクのクリック
          if (e.target.closest('#logout-link')) {
            e.preventDefault();
            console.log('Logout link clicked'); // デバッグ用
            if (confirm('ログアウトしますか？')) {
              fetch('/logout', {
                method: 'DELETE',
                headers: {
                  'X-CSRF-Token': document.querySelector('[name="csrf-token"]').getAttribute('content')
                }
              })
              .then(response => {
                if (response.ok) {
                  window.location.href = '/';
                }
              })
              .catch(error => {
                console.error('Logout error:', error);
                window.location.href = '/logout';
              });
            }
          }

          if (e.target.closest('.favorite-btn')) {
            e.preventDefault();
            const btn = e.target.closest('.favorite-btn');
            toggleFavorite(btn);
          }

          if (e.target.closest('.remove-from-collection')) {
            e.preventDefault();
            const btn = e.target.closest('.remove-from-collection');
            removeFromCollection(btn);
          }
        });

        function toggleFavorite(btn) {
          const data = {
            favorite_album: {
              spotify_id: btn.dataset.spotifyId,
              name: btn.dataset.name,
              artist: btn.dataset.artist,
              image_url: btn.dataset.imageUrl,
              external_url: btn.dataset.externalUrl,
              release_date: btn.dataset.releaseDate,
              total_tracks: btn.dataset.totalTracks
            }
          };

          fetch('/favorite_albums/toggle', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': document.querySelector('[name="csrf-token"]').getAttribute('content')
            },
            body: JSON.stringify(data)
          })
          .then(response => response.json())
          .then(data => {
            showMessage(data.message, data.status);

            if (data.status === 'added') {
              btn.classList.remove('btn-outline-danger');
              btn.classList.add('btn-danger');
            } else if (data.status === 'removed') {
              btn.classList.remove('btn-danger');
              btn.classList.add('btn-outline-danger');
            }
          })
          .catch(error => {
            console.error('Error:', error);
            showMessage('エラーが発生しました', 'error');
          });
        }

        function removeFromCollection(btn) {
          if (confirm('このアルバムをコレクションから削除しますか？')) {
            fetch(`/favorite_albums/${btn.dataset.spotifyId}`, {
              method: 'DELETE',
              headers: {
                'X-CSRF-Token': document.querySelector('[name="csrf-token"]').getAttribute('content')
              }
            })
            .then(response => response.json())
            .then(data => {
              showMessage(data.message, data.status);

              if (data.status === 'removed') {
                const card = btn.closest('.collection-item');
                card.style.opacity = '0';
                setTimeout(() => card.remove(), 300);
              }
            })
            .catch(error => {
              console.error('Error:', error);
              showMessage('エラーが発生しました', 'error');
            });
          }
        }

        function showMessage(message, type) {
          const alertClass = type === 'error' ? 'alert-danger' : 'alert-success';
          const alertHtml = `
            <div class="alert ${alertClass} alert-dismissible fade show position-fixed"
                 style="top: 20px; right: 20px; z-index: 9999;" role="alert">
              ${message}
              <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
          `;

          document.body.insertAdjacentHTML('beforeend', alertHtml);

          setTimeout(() => {
            const alert = document.querySelector('.alert');
            if (alert) alert.remove();
          }, 3000);
        }

        // ページ読み込み時にお気に入り状態をチェック
        checkFavoriteStatus();

        function checkFavoriteStatus() {
          const favoriteButtons = document.querySelectorAll('.favorite-btn');

          if (favoriteButtons.length > 0) {
            fetch('/favorite_albums.json')
              .then(response => response.json())
              .then(favorites => {
                favoriteButtons.forEach(btn => {
                  const isFavorite = favorites.some(fav => fav.spotify_id === btn.dataset.spotifyId);
                  if (isFavorite) {
                    btn.classList.remove('btn-outline-danger');
                    btn.classList.add('btn-danger');
                  }
                });
              })
              .catch(error => console.error('Error checking favorites:', error));
          }
        }
      });
    </script>
  </body>
</html>